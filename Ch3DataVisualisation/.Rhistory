# Group flights by destination
# Summarize distance, avg. delay, number of flights
# Filter to remove noise (I.E. Honolulu)
(delays <- flights %>%
group_by(dest) %>%
summarize(
count = n(),
dist = mean(dist, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
)
arrange(delays, desc(delays))
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Piping
# Group flights by destination
# Summarize distance, avg. delay, number of flights
# Filter to remove noise (I.E. Honolulu)
(delays <- flights %>%
group_by(dest) %>%
summarize(
count = n(),
dist = mean(dist, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
)
arrange(delays, desc(delay))
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Piping
# Group flights by destination
# Summarize distance, avg. delay, number of flights
# Filter to remove noise (I.E. Honolulu)
(delays <- flights %>%
group_by(dest) %>%
summarize(
count = n(),
dist = mean(dist, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
)
arrange(delays, desc(dist))
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Piping
# Group flights by destination
# Summarize distance, avg. delay, number of flights
# Filter to remove noise (I.E. Honolulu)
(delays <- flights %>%
group_by(dest) %>%
summarize(
count = n(),
dist = mean(dist, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
)
arrange(delays)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Piping
# Group flights by destination
# Summarize distance, avg. delay, number of flights
# Filter to remove noise (I.E. Honolulu)
(delays <- flights %>%
group_by(dest) %>%
summarize(
count = n(),
dist = mean(dist, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
delay <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
# Filter to remove noise (I.E. Honolulu)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
(delay <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
))
# Filter to remove noise (I.E. Honolulu)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
(delay <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
))
arr(delay, dist)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
(delays <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
))
arr(delay, dist)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
(delays <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
))
arrange(delays, dist)
# Filter to remove noise (I.E. Honolulu)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
(delays <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
))
arrange(delays, desc(dist))
# Filter to remove noise (I.E. Honolulu)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
(delays <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
))
# Honolulu is quite far away from all others
arrange(delays, desc(dist))
# Filter to remove noise (I.E. Honolulu)
(delays <- filter(delays, dest != "HNL"))
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
(delays <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
))
# Honolulu is quite far away from all others
arrange(delays, desc(dist))
arrange(delays, count)
# Filter to remove noise (I.E. Honolulu and destinations with a very small number of flights)
(delays <- filter(delays, dest != "HNL"))
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
(delays <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
))
# Honolulu is quite far away from all others
arrange(delays, desc(dist))
# Ignore destinations that rarely occur
arrange(delays, count)
# Filter to remove noise (I.E. Honolulu and destinations with a very small number of flights)
(delays <- filter(delays, dest != "HNL"))
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
(delays <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
))
# Honolulu is quite far away from all others
arrange(delays, desc(dist))
# Ignore destinations that rarely occur
arrange(delays, count)
# Filter to remove noise (I.E. Honolulu and destinations with a very small number of flights)
(delays <- filter(delays, count > 20, dest != "HNL"))
# Visualize the data
ggplot(data = delays, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
(delays <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
))
# Honolulu is quite far away from all others
arrange(delays, desc(dist))
# Ignore destinations that rarely occur
arrange(delays, count)
# Filter to remove noise (I.E. Honolulu and destinations with a very small number of flights)
(delays <- filter(delays, count > 20, dest != "HNL"))
# Visualize the data
ggplot(data = delays, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
# Do the same thing using pipes
# Note: x %>% f(y) == f(x, y)
delays <- flights %>%
group_by(dest) %>%
summarize(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL")
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
(delays <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
))
# Honolulu is quite far away from all others
arrange(delays, desc(dist))
# Ignore destinations that rarely occur
arrange(delays, count)
# Filter to remove noise (I.E. Honolulu and destinations with a very small number of flights)
(delays <- filter(delays, count > 20, dest != "HNL"))
# Visualize the data
ggplot(data = delays, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
# Do the same thing using pipes
# Note: x %>% f(y) == f(x, y)
(delays <- flights %>%
group_by(dest) %>%
summarize(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL"))
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
(delays <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
))
# Honolulu is quite far away from all others
arrange(delays, desc(dist))
# Ignore destinations that rarely occur
arrange(delays, count)
# Filter to remove noise (I.E. Honolulu and destinations with a very small number of flights)
(delays <- filter(delays, count > 20, dest != "HNL"))
# Visualize the data
ggplot(data = delays, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
# Do the same thing using pipes
# Note: x %>% f(y) == f(x, y)
(delays <- flights %>%
group_by(dest) %>%
summarize(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL") %>%
arrange(delay)
)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
(delays <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
))
# Honolulu is quite far away from all others
arrange(delays, desc(dist))
# Ignore destinations that rarely occur
arrange(delays, count)
# Filter to remove noise (I.E. Honolulu and destinations with a very small number of flights)
(delays <- filter(delays, count > 20, dest != "HNL"))
# Visualize the data
ggplot(data = delays, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
# Do the same thing using pipes
# Note: x %>% f(y) == f(x, y)
(delays <- flights %>%
group_by(dest) %>%
summarize(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL") %>%
arrange(desc(delay))
)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
(delays <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
))
# Honolulu is quite far away from all others
arrange(delays, desc(dist))
# Ignore destinations that rarely occur
arrange(delays, count)
# Filter to remove noise (I.E. Honolulu and destinations with a very small number of flights)
(delays <- filter(delays, count > 20, dest != "HNL"))
# Visualize the data
ggplot(data = delays, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
# Do the same thing using pipes
# Note: x %>% f(y) == f(x, y) and x %>% f(y) %>% g(z) == g(f(x, y), z)
(delays <- flights %>%
group_by(dest) %>%
summarize(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL") %>%
arrange(desc(delay))
)
# Reason for using na.rm
flights %>%
group_by(year, month, day) %>%
summarize(mean = mean(dep_delay))
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
(delays <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
))
# Honolulu is quite far away from all others
arrange(delays, desc(dist))
# Ignore destinations that rarely occur
arrange(delays, count)
# Filter to remove noise (I.E. Honolulu and destinations with a very small number of flights)
(delays <- filter(delays, count > 20, dest != "HNL"))
# Visualize the data
ggplot(data = delays, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
# Do the same thing using pipes
# Note: x %>% f(y) == f(x, y) and x %>% f(y) %>% g(z) == g(f(x, y), z)
(delays <- flights %>%
group_by(dest) %>%
summarize(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL") %>%
arrange(desc(delay))
)
# Reason for using na.rm
flights %>%
group_by(year, month, day) %>%
summarize(mean = mean(dep_delay))
# Fixed
flights %>%
group_by(year, month, day) %>%
summarize(mean = mean(dep_delay, na.rm = TRUE))
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarize(by_day, delay = mean(dep_delay, na.rm = TRUE))
# Group flights by destination
by_dest <- group_by(flights, dest)
# Summarize distance, avg. delay, number of flights
(delays <- summarize(
by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
))
# Honolulu is quite far away from all others
arrange(delays, desc(dist))
# Ignore destinations that rarely occur
arrange(delays, count)
# Filter to remove noise (I.E. Honolulu and destinations with a very small number of flights)
(delays <- filter(delays, count > 20, dest != "HNL"))
# Visualize the data
ggplot(data = delays, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
# Do the same thing using pipes
# Note: x %>% f(y) == f(x, y) and x %>% f(y) %>% g(z) == g(f(x, y), z)
(delays <- flights %>%
group_by(dest) %>%
summarize(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL") %>%
arrange(desc(delay))
)
# Reason for using na.rm
flights %>%
group_by(year, month, day) %>%
summarize(mean = mean(dep_delay))
# Fixed
flights %>%
group_by(year, month, day) %>%
summarize(mean = mean(dep_delay, na.rm = TRUE))
# Remove cancelled flights from the data set
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
not_cancelled %>%
group_by(year, month, day) %>%
summarize(mean = mean(dep_delay))
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarize(
delay = mean(arr_delay)
)
ggplot(data = delays, mapping = aes(x = delay)) +
geom_freqpoly(binwidth = 10)
# Find individual planes (identified by tail num) and their average delays
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarize(
delay = mean(arr_delay)
)
ggplot(data = delays, mapping = aes(x = delay)) +
geom_freqpoly(binwidth = 10)
# Try with number of flights vs avg delay
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarize(
delay = mean(arr_delay),
n = n()
)
ggplot(data = delays, mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/10)
